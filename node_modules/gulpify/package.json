{
  "name": "gulpify",
  "description": "(deprecated) a browserify plugin for gulp",
  "version": "0.1.1",
  "main": "index.js",
  "browser": "index.js",
  "dependencies": {
    "through": "~2.3.4",
    "browserify": "3.x.x",
    "vinyl": "~0.2.1"
  },
  "devDependencies": {
    "concat-stream": "~1.4.0",
    "tape": "~2.3.2"
  },
  "scripts": {
    "test": "node test"
  },
  "author": {
    "name": "Hugh Kennedy",
    "email": "hughskennedy@gmail.com",
    "url": "http://hughsk.io/"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git://github.com/hughsk/gulpify"
  },
  "bugs": {
    "url": "https://github.com/hughsk/gulpify/issues"
  },
  "homepage": "https://github.com/hughsk/gulpify",
  "keywords": [
    "gulp",
    "plugin",
    "gulpplugin",
    "browserify"
  ],
  "readme": "# gulpify [![Flattr this!](https://api.flattr.com/button/flattr-badge-large.png)](https://flattr.com/submit/auto?user_id=hughskennedy&url=http://github.com/hughsk/gulpify&title=gulpify&description=hughsk/gulpify%20on%20GitHub&language=en_GB&tags=flattr,github,javascript&category=software)[![deprecated](http://hughsk.github.io/stability-badges/dist/deprecated.svg)](http://github.com/hughsk/stability-badges) #\n\n> **This module is deprecated in favor of\n[vinyl-source-stream](http://github.com/hughsk/vinyl-source-stream). If you'd\nlike to use a plugin, you can still use\n[gulp-browserify](http://github.com/deepak1556/gulp-browserify).**\n\nA simple but flexible [browserify](http://browserify.org/) plugin for\n[Gulp v3](http://github.com/gulpjs/gulp). Mostly just to see how gulp\nand its ecosystem works.\n\n## Usage ##\n\n[![gulpify](https://nodei.co/npm/gulpify.png?mini=true)](https://nodei.co/npm/gulpify)\n\nFirst, install `gulpify` as a development dependency:\n\n``` bash\nnpm install --save-dev gulpify\n```\n\nThen, add it to your `gulpfile.js`:\n\n``` javascript\nvar browserify = require('gulpify')\nvar gulp = require('gulp')\n\ngulp.task('bundle', function() {\n  gulp.src('index.js')\n    .pipe(browserify('bundle.js'))\n    .pipe(gulp.dest('./dist/'))\n})\n```\n\nMost of the methods normally supported by `browserify` are available on this\ngulp stream, and you can pass in an options object directly to it too:\n\n``` javascript\nvar browserify = require('gulpify')\nvar gulp = require('gulp')\n\ngulp.task('bundle', function() {\n  var bundler = browserify('bundle.js', {\n      cwd: __dirname + '/some/folder'\n    , noParse: true\n  })\n\n  bundler\n    .transform('coffeeify')\n    .transform('decomponentify')\n    .transform('envify')\n    .ignore(require.resolve('express'))\n\n  bundler.on('file', function(file) {\n    console.log('parsed file: ' + file)\n  })\n\n  bundler.on('bundle', function() {\n    console.log('starting browserify bundle')\n  })\n\n  bundler.on('end', function() {\n    console.log('finished browserify bundle')\n  })\n\n  gulp.src('index.js')\n    .pipe(bundler)\n    .pipe(gulp.dest('./dist/'))\n})\n```\n\nAlso note that right now **streaming files are not supported**, i.e. you cannot\nuse the following in your pipeline:\n\n``` javascript\ngulp.src('file.js', { buffer: false })\n```\n\n## API ##\n\n### `stream = gulpify(fileName, options={})` ###\n\n#### `fileName` ####\n\nType: `String`\n\nThe file name of the resulting bundle - much like\n[gulp-concat](http://github.com/wearefractal/gulp-concat) expects.\n\n#### `options` ####\n\nType: `Object`\nDefault: `{ cwd: firstFile.cwd }`\n\nExactly the same as if you were to pass the options object directly to\nbrowserify, however `options.cwd` will default to the first file's own\n`cwd` property unless you specify it yourself.\n\n### `stream[method](args...)` ###\n\nA number of methods that are normally exposed on `browserify`'s bundler\ninstance are also usable directly on the gulpify stream, e.g.:\n\n``` javascript\nvar stream = gulpify('bundle.js').transform('brfs')\n```\n\nCurrently, the following methods are available:\n\n* `add(file)`\n* `require(file, options={})`\n* `external(file)`\n* `ignore(file)`\n* `exclude(file)`\n* `transform(options={}, tr)`\n\nYou should consult the [browserify documentation](http://github.com/substack/node-browserify) for information on how to use\nthese methods.\n\n## License ##\n\nMIT. See [LICENSE.md](http://github.com/hughsk/gulpify/blob/master/LICENSE.md) for details.\n",
  "readmeFilename": "README.md",
  "_id": "gulpify@0.1.1",
  "dist": {
    "shasum": "e2aaf0d3fdfc0bb4eff7c3e0ab7191f057e22700",
    "tarball": "http://registry.npmjs.org/gulpify/-/gulpify-0.1.1.tgz"
  },
  "_from": "gulpify@>=0.1.1 <0.2.0",
  "_npmVersion": "1.3.22",
  "_npmUser": {
    "name": "hughsk",
    "email": "hughskennedy@gmail.com"
  },
  "maintainers": [
    {
      "name": "hughsk",
      "email": "hughskennedy@gmail.com"
    }
  ],
  "directories": {},
  "deprecated": "gulpify has been deprecated in favor of using \"browserify\" directly in combination with the \"vinyl-source-stream\" module, or \"gulp-browserify\" if you would like to use a plugin",
  "_shasum": "e2aaf0d3fdfc0bb4eff7c3e0ab7191f057e22700",
  "_resolved": "https://registry.npmjs.org/gulpify/-/gulpify-0.1.1.tgz"
}
